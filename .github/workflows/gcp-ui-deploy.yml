# github actions workflow used for deploying a new tesseract-ui instance on gcp triggered by a user interface on github actions
name: "[GCP] Deploy Tesseract-UI Image"

# trigger the workflow when the user interface on github actions is triggered
on:
  # waits for the user interaction
  workflow_dispatch:
    inputs:
      # url of the tesseract-olap instance running
      tesseract-url:
        description: 'Tesseract Instance URL'
        required: true
      # the type of deployment
      env:
        description: 'Deployment Type (prod | dev)'
        required: true
        default: 'dev'

# environment variables used on the respective workflow
env:
  # docker variables
  IMAGE_NAME: tesseract-template-ui-${{ github.event.inputs.env }}
  # google cloud platform credentials (they come from github secrets)
  GCP_ARTIFACT_REGISTRY_REPO_NAME: ${{ secrets.GCP_ARTIFACT_REGISTRY_REPO_NAME }}
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
  # tesseract-ui environment variables
  TESSERACT_SERVICE_NAME: tesseract-template-ui-${{ github.event.inputs.env }}
  TESSERACT_URL: ${{ github.event.inputs.tesseract-url }}

jobs:
  deploy:
    # deploys a new tesseract-ui instance on gcp
    name: Deploy Tesseract UI Instance
    runs-on: ubuntu-latest
    steps:
      - name: Check Input variables
        run: echo "Deploying service ${{ env.TESSERACT_SERVICE_NAME }} connected to Tesseract at ${{ env.TESSERACT_URL }}"

      - name: Checkout Source Code
        uses: actions/checkout@v2

      - name: Set up GCloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ env.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Create cloudbuild.yml
        working-directory: ./tesseract-ui
        run: |-
          chmod +x ./create-cloud-build.sh \
            && ./create-cloud-build.sh \
              ${{ env.TESSERACT_URL }} \
              ${{ env.GCP_PROJECT_ID }} \
              ${{ env.GCP_ARTIFACT_REGISTRY_REPO_NAME }} \
              ${{ env.IMAGE_NAME }} \
              > cloudbuild.yml

      - name: Build Docker image
        working-directory: ./tesseract-ui
        run: |-
          gcloud builds submit \
            --quiet \
            --config=cloudbuild.yml

      - name: Deploy Image to Cloud Run
        run: |-
          gcloud run deploy ${{ env.TESSERACT_SERVICE_NAME }} \
            --image=us-central1-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GCP_ARTIFACT_REGISTRY_REPO_NAME }}/${{ env.IMAGE_NAME }} \
            --port=80 \
            --allow-unauthenticated \
            --region=us-central1
